<project name="build-plugin">

    <property name="plugin.root.dir" value="${basedir}"/>
    <property name="root.dir" value="../.."/>

    <import file="build-sdk.xml" />
    <property file="build.properties" />
    
    <path id="compile.classpath" />
    <path id="test.classpath" />
    <path id="runtime.classpath" />
    <path id="provided.classpath" />
    <path id="job.classpath" />
    <path id="artifact.classpath" />
    <path id="artifact.test.classpath" />
    <path id="artifact.it.classpath" />
    <mkdir dir="lib/test" />
    <mkdir dir="lib/compile" />
    <mkdir dir="lib/provided" />
    <mkdir dir="lib/runtime" />
    <mkdir dir="src/main/java" />
    <mkdir dir="src/main/resources" />
    <mkdir dir="src/main/generated" />
    <mkdir dir="src/test/java" />
    <mkdir dir="src/test/resources" />
    <mkdir dir="src/it/java" />
    <mkdir dir="src/it/resources" />

    <path id="build.classpath">
        <fileset dir="${sdk.home}/lib-build">
            <include name="**/*.jar" />
            <exclude name="**/*-sources.jar" />
    		<exclude name="**/*-source.jar" />
    		<exclude name="**/*-javadoc.jar" />	            	
        </fileset>
    </path>

    <macrodef name="addSdkLibsToClasspath">
        <sequential>
            <ant dir="../connectors-common" inheritAll="false"/>
        	<copy todir="lib/compile" overwrite="true">
        	  <fileset dir="../connectors-common/build/artifacts">
        	    <include name="*.jar"/>
        	  	<exclude name="*test.jar"/>
        	  </fileset>
        	</copy>
            <copy todir="lib/compile" flatten="true">
              <resources>
                <url url="${artifactory.url}/org/apache/amber/amber-oauth2-common/0.22-incubating/amber-oauth2-common-0.22-incubating.jar"/>
                <url url="${artifactory.url}/org/apache/amber/amber-oauth2-client/0.22-incubating/amber-oauth2-client-0.22-incubating.jar"/>
                <url url="${artifactory.url}/com/google/api-client/google-api-client/1.17.0-rc/google-api-client-1.17.0-rc.jar"/>
                <url url="${artifactory.url}/com/google/apis/google-api-services-storage/v1beta2-rev25-1.17.0-rc/google-api-services-storage-v1beta2-rev25-1.17.0-rc.jar"/>
                <url url="${artifactory.url}/com/google/http-client/google-http-client/1.17.0-rc/google-http-client-1.17.0-rc.jar"/>
                <url url="${artifactory.url}/com/google/http-client/google-http-client-jackson2/1.17.0-rc/google-http-client-jackson2-1.17.0-rc.jar"/>
                <url url="${artifactory.url}/com/google/oauth-client/google-oauth-client/1.17.0-rc/google-oauth-client-1.17.0-rc.jar"/>
                <url url="${artifactory.url}/com/fasterxml/jackson/core/jackson-core/2.1.1/jackson-core-2.1.1.jar"/>
                <url url="${artifactory.url}/org/codehaus/jettison/jettison/1.2/jettison-1.2.jar"/>
              </resources>
            </copy>
            <copy todir="lib/test" flatten="true">
              <resources>
                <url url="${artifactory.url}/junit/junit/4.8.2/junit-4.8.2.jar"/>
                <url url="${artifactory.url}/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar"/>
              </resources>
            </copy> 
        	<pathconvert property="compile.classpath.prop-sdklib" refid="compile.classpath" />
            <path id="compile.classpath">
                <pathelement path="${compile.classpath.prop-sdklib}" />
                <fileset dir="${sdk.home}/lib">
                    <include name="**/*.jar" />
                    <exclude name="**/*-sources.jar" />
            		<exclude name="**/*-source.jar" />
            		<exclude name="**/*-javadoc.jar" />	                    	
                </fileset>
            </path>
        </sequential>
    </macrodef>       
    
    <addPluginToClasspath plugin="${basedir}" />
    <addSdkLibsToClasspath />

    <target name="setupArtifactClasspath" />

    <target name="compile" depends="setupArtifactClasspath">
        <mkdir dir="${build.dir.main-classes}" />
        <javac encoding="${build.encoding}" includes="**/*.java" destdir="${build.dir.main-classes}" debug="${javac.debug}" optimize="${javac.optimize}" target="${javac.version}" source="${javac.version}" deprecation="${javac.deprecation}">
            <src path="${main.src.dir}" />
            <src path="${main.gen.dir}" />
            <compilerarg line="${javac.args} ${javac.args.warnings}" />
            <classpath refid="compile.classpath" />
            <classpath refid="provided.classpath" />
            <classpath refid="artifact.classpath" />
        </javac>
        <copy todir="${build.dir.main-classes}">
            <fileset dir="${main.res.dir}"/>
        </copy>
    </target>
	
	<target name="fatJar" depends="compile">
	   <property name="fatJar.name" value="${ant.project.name}-${version}-fat.jar" />
	   <property name="fatJar.path" value="${artifact.dir}/${fatJar.name}" />

	   <echo>Building plugins fat jar: ${fatJar.name}</echo>
	   <jar jarfile="${fatJar.path}" basedir="${build.dir.main-classes}">
	     <zipgroupfileset dir="lib/compile" includes="*.jar"/>
	     <zipgroupfileset dir="lib/runtime" includes="*.jar"/>
	   </jar>
	</target>

    <target name="zip" depends="jar,fatJar">
        <mkdir dir="${build.dir}"/>
        <zip destfile="${build.dir}/${ant.project.name}-${version}.zip">
            <zipfileset dir="lib" prefix="${ant.project.name}/lib" />
            <zipfileset dir="build/classes-main" prefix="${ant.project.name}/classes" />
            <zipfileset file="plugin.xml" prefix="${ant.project.name}" />
        </zip>
    </target>

    <target name="jar" depends="clean,clean-all,compile">
        <buildJar jarname="${jar.name}" mainclasses="${build.dir.main-classes}" />
    </target>

    <target name="compile-unit" depends="setupArtifactClasspath">
        <compileTests artifactclasspath="artifact.test.classpath" srcdir="${test.src.dir}" resdir="${test.res.dir}" testclasses="${build.dir.test-classes}" />
    </target>

    <target name="unit-jar" depends="jar, compile-unit">
        <buildJar jarname="${jar.test.name}" mainclasses="${build.dir.test-classes}" />
    </target>
    
    <target name="unit" depends="unit-jar">
        <runTests srcdir="${test.src.dir}" forkmode="once" testClasses="${build.dir.test-classes}" testReports="${build.dir.test-reports}" extraClasspath="artifact.test.classpath" haltOnFailure="true"/>
    </target>
    
    <target name="test" depends="unit" description="Runs all unit tests." />
</project>